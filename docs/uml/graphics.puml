@startuml

' Visuals
'-------------------------------------

hide GPUDevice fields

'-------------------------------------

' Relations
'-------------------------------------

GPUDevice ---o GPUTexture
GPUDevice ---o GPUTextureDescription

GPUDevice ---o GPUBuffer
GPUDevice ---o GPUBufferDescription

GPUDevice ---o GPUPipelineState
GPUDevice ---o GPUPipelineStateDescription

GPUDevice ---o GPUShader
GPUDevice ---o GPUShaderDescription

GPUDevice ---o GPUShaderProgram
GPUDevice ---o GPUShaderProgramDescription

GPUResource <|-- GPUTexture
GPUResource <|-- GPUBuffer
GPUResource <|-- GPUPipelineState
GPUResource <|-- GPUShader

GPUTexture --* GPUTextureDescription
GPUTextureDescription --* GPUResourceUsage
GPUTextureDescription --* PixelFormat

GPUBuffer --* GPUBufferDescription
GPUBufferDescription --* GPUBufferUtility
GPUBufferDescription --* GPUResourceUsage

GPUPipelineState --* GPUPipelineStateDescription
GPUPipelineStateDescription --* PrimitiveTolopogyType
GPUPipelineStateDescription --* CullMode
GPUPipelineStateDescription --* GPUPipelineStateLayout

GPUPipelineStateLayout --* GPUPipelineStateElement

GPUShader --* GPUShaderDescription
GPUShaderDescription --* GPUShaderProgram

GPUShaderProgram --* GPUShaderProgramDescription
GPUShaderProgramDescription --* GPUShaderProgramStage

'-------------------------------------

' Enums
'-------------------------------------

enum GPUBufferUtility {
    None
    --
    IndexBuffer
    VertexBuffer
}

enum GPUResourceUsage {
    Default
    --
    Dynamic
    --
    StagingUpload
    StagingReadback
}

enum PixelFormat {

}

enum PrimitiveTolopogyType {
    Undefined
    --
    Point
    Line
    Triangle
}

enum CullMode {
    Normal
    Inverted
    TwoSided
}

enum GPUShaderProgramStage {
    Vertex
    Fragment
    Geometry
}

'-------------------------------------

' Core
'-------------------------------------

class GPUDevice {
    + CreateBuffer ( GPUBUfferDescription ) : GPUBuffer
    + CreateTexture ( GPUTextureDescription ) : GPUTexture
    + CreatePipelineState ( GPUPipelineStateDescription ) : GPUPipelineStateDescription
    + CreateShaderProgram ( GPUShaderProgramDescription ) : GPUShaderProgramDescription
    + CreateShader ( GPUShaderDescription ) : GPUShader
}

class GPUResource { 
    + {abstract} ~GPUResource ()
    ==
    + Bind () : void
    + Unbind () : void
    --
    + GetResource () : unsigned int
    ==
    - Resource : unsigned int

}

'-------------------------------------

class GPUTexture {
    + GetDescription () : GPUTextureDescription
    ==
    - Description : GPUTextureDescription
}


class GPUTextureDescription <<struct>> {
    + Width : unsigned int
    + Height : unsigned int
    --
    + Format : PixelFormat
    --
    + Usage : GPUResourceUsage
}

class GPUBuffer {
    + GetDescription () : GPUBufferDescription
    ==
    - Description : GPUBUfferDescription
}

class GPUBufferDescription <<struct>> {
    + Data : pointer to void
    --
    + Size : unsigned int
    + Stride : unsigned int
    --
    + Utility : GPUBufferUtility
    --
    + Usage : GPUResourceUsage
}

class GPUPipelineState {
    + GetDescription () : GPUPipelineStateDescription
    ==
    - Description : GPUPipelineStateDescription
}


class GPUPipelineStateDescription <<struct>> {
    + VertexShader : GPUShaderProgram
    + GeometryShader : GPUShaderProgram
    + FragmentShader : GPUShaderProgram
    --
    + Wireframe : bool
    + CullMode : CullMode
    --
    + Layout : GPUPipelineStateLayout
    + TopologyType : PrimitiveTolopogyType
}

class GPUPipelineStateLayout {
    + GetLayout() : array of GPUPipelineStateElement
    ==
    - Layout : array of GPUPipelineStateElement
}

class GPUPipelineStateElement <<struct>> {
    + Name : string
    ==
    + Size : unsigned int
    + Offset : unsigned int
}

class GPUShader {
    + GetDescription () : GPUShaderDescription
    ==
    - Description : GPUShaderDescription
}

class GPUShaderDescription {
    + ShaderPrograms : array of GPUShaderProgram
}

class GPUShaderProgram {
    + GetDescription () : GPUShaderProgramDescription
    ==
    - Description : GPUShaderProgramDescription
}

class GPUShaderProgramDescription {
    + Name : string
    ==
    + Stage : GPUShaderProgramStage
}


@enduml